const mix = require('laravel-mix');
const tailwindcss = require('tailwindcss');
const path = require('path');
const fs = require('fs');

// Set public path
mix.setPublicPath('./build');

// Compile JavaScript
mix.js('src/js/app.js', 'js');

// Compile CSS with PostCSS and Tailwind
mix.postCss('src/css/app.css', 'css', [
    require('postcss-import'),
    tailwindcss('./tailwind.config.js'),
    require('autoprefixer'),
]);

// We don't use mix.version() as we use THEME_VERSION for versioning

// Source maps
mix.sourceMaps(!mix.inProduction());

// Disable success notifications
mix.disableSuccessNotifications();

// Create theme version file in production mode
if (mix.inProduction()) {
    mix.then(() => {
        // Create a unique identifier using timestamp and random string for better versioning
        const timestamp = new Date().toISOString().replace(/[^0-9]/g, '').substring(0, 14);
        const randomPart = Math.random().toString(36).substring(2, 7);
        const uniqueId = `${timestamp}-${randomPart}`;

        // Prepare PHP file with version constant
        const phpContent = `<?php
/**
 *
 * Theme Version Identifier
 *
 * Auto-generated by build process
 * Do not edit manually
 */

define('THEME_VERSION', '${uniqueId}');
`;

        // Save the PHP file
        const outputPath = path.join(__dirname, 'versioning.php');
        fs.writeFileSync(outputPath, phpContent);
    });
}
